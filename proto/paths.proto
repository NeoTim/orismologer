/*
Copyright 2019 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";
package mappings;

// Represents an OpenConfig path.
message OpenConfigPath {
  // TODO: Validate. Eg: Ensure path string is a real OC path.
  // See https://github.com/openconfig/reference/blob/master/rpc/gnmi/
  // gnmi-path-strings.md.
  string path = 1;

  /*
  Specifies the revisions for which the path is valid. If no revisions are
  given then the path is assumed to be valid for all revisions.
   */
  // TODO: Validate: Properly formatted semantic versioning, and
  // revision exists
  repeated string revisions = 2;
}

/*
Represents a non-OpenConfig telemetry path (eg: an OID). If more than one
path is given then they are assumed to be perfectly equivalent (without
processing/transformation).
 */
message NocPath {
  string bind = 1;

  /*
  All paths given here are equivalent. Eg: OIDs for different vendors which
  yield identical output.
  Clients are expected to use only one of the given paths.
  Paths specified earlier in the message will be preferred over those
  specified later.
   */
  // TODO: Validation. Ensure path string is a real SNMP path.
  repeated string oids = 2;  // Dot-notation OID path.

  /*
  Optional sample output from the NocPath for use by maintainers and for
  automated testing.
  */
  repeated string samples = 4;

  // Additional path types could be specified here, eg: format strings which
  // match CLI output.
}

/*
Data types modeled by NocPaths.
Data will be typecast as appropriate after being retrieved.
 */
enum DataType {
  UNDEFINED = 0;
  INT = 1;
  UINT = 2;
  FLOAT = 3;

  STRING = 4;

  ISO8601 = 5;
  NTP = 6;
}
